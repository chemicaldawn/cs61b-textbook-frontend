---
class SidebarItem {

    chapter : number;
    id : number;
    name : string;
    isSection : boolean;

    constructor(chapter : number, id : number, name : string, isSection : boolean) {
        this.chapter = chapter;
        this.id = id;
        this.name = name;
        this.isSection = isSection;
    }
}
const items : SidebarItem[] = []
const paths =  Object.entries(import.meta.glob("../../content/**/*.mdx", { eager: true })).map((entry : [string, any]) => {
    
    let path = entry[0]
    let chapterMatch = path.match(/\/([0-9]+)\/[0-9\.]+.md/)
    let idMatch = path.match(/\/([0-9\.]+).md/)

    if (chapterMatch && idMatch) {
        let chapter = chapterMatch[1]
        let id = idMatch[1]
        let isSection = false

        if (id.includes(".")) {
            isSection = true
        }

        items.push(new SidebarItem(Number(chapter),Number(id),entry[1].frontmatter.title,isSection))
    }
})


items.sort((a : SidebarItem, b : SidebarItem) => {
    if (a.chapter != b.chapter) {
        return a.chapter - b.chapter
    } else if (a.isSection || a.isSection) {
        return Number(b.isSection) - Number(a.isSection)
    } else {
        return a.id - b.id
    }
})
console.log(items)
---
{items.map((item : SidebarItem) => 
    <div class={item.isSection ? "sidebar-item section" : "sidebar-item"}
        hx-get=`/partials/${item.id}` hx-on="click" hx-target="#content"
    >
        <div class="section">{String(item.id)}</div>
        <div class="name">{item.name}</div>
    </div>
)}